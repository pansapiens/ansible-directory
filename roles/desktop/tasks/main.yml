---
# tasks file for desktop

# This gets the equivalent upstream Ubuntu release name on Mint (eg xenial instead of sarah)
# NOTE: Since type=properties seems broken on the latest dev version of Ansible,
#       we have hard coded 'sarah'='xenial' below
#- set_fact: ubuntu_release="{{ lookup('ini', 'UBUNTU_CODENAME type=properties file=/etc/os-release') }}"
#  when: ansible_lsb.id == 'LinuxMint'

- set_fact: ubuntu_release="xenial"
  when: (ansible_lsb.id == 'LinuxMint') and (ansible_lsb.codename == 'sarah')

- set_fact: ubuntu_release="{{ansible_distribution_release}}"
  when: ansible_lsb.id == 'Ubuntu'

# Add repos
- name: Add multiverse repo
  apt_repository: repo="{{item}}" update_cache=false
  when: ansible_distribution == 'Ubuntu'
  with_items:
    - 'deb http://archive.ubuntu.com/ubuntu {{ubuntu_release}} multiverse'
    - 'deb-src http://archive.ubuntu.com/ubuntu {{ubuntu_release}} multiverse'
    - 'deb http://archive.ubuntu.com/ubuntu {{ubuntu_release}}-updates multiverse'
    - 'deb-src http://archive.ubuntu.com/ubuntu {{ubuntu_release}}-updates multiverse'

- name: Add Canonical Archive Repo
  apt_repository: repo='deb http://archive.canonical.com/ {{ ubuntu_release }} partner' state=present filename='canonical-archive'

- name: Add Java PPA (ppa:webupd8team/java)
#  apt_repository: repo='ppa:webupd8team/java'
  command: apt-add-repository -y ppa:webupd8team/java

- name: Add Ubuntu Make PPA
# apt_repository: repo='ppa:ubuntu-desktop/ubuntu-make'
  command: apt-add-repository -y ppa:ubuntu-desktop/ubuntu-make

- name: Add Dropbox repo key
  apt_key: keyserver=pgp.mit.edu id=5044912E

- name: Add Dropbox repo
  apt_repository: repo='deb http://linux.dropbox.com/ubuntu {{ ubuntu_release }} main' state=present filename='dropbox'

- name: Add Google repo key
  apt_key: url=https://dl.google.com/linux/linux_signing_key.pub

- name: Add Google Chrome repo
  apt_repository: repo='deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main' state=present filename='google-chrome'

- name: Add Google Talk Plugin repo
  apt_repository: repo='deb http://dl.google.com/linux/talkplugin/deb/ stable main' state=present filename='google-talkplugin'

- name: Add Spotify repo
  apt_repository: repo='deb http://repository.spotify.com stable non-free' state=present filename='spotify'

- name: Add Firefox Aurora (Developer Edition) PPA (ppa:ubuntu-mozilla-daily/firefox-aurora)
# apt_repository: repo='ppa:ubuntu-mozilla-daily/firefox-aurora'
  command: apt-add-repository -y ppa:ubuntu-mozilla-daily/firefox-aurora

#####

- name: Update APT cache
  apt: update_cache=yes cache_valid_time=3600

- name: Safe apt-get upgrade
  apt: upgrade=safe

- name: Install base development/server packages
  apt: pkg={{item}} state=present
  with_items:
    - mosh
    - openssh-server
    - samba
    - samba-common
    - smbclient
    - samba-vfs-modules
    - build-essential
    - git
    - python-pip
    - python3-pip
    - virtualenvwrapper
    - ubuntu-make
    - vim
    - at
    - aria2
    - microcode.ctl
    - intel-microcode
    - ppa-purge
    - python-dev
    - python3-dev
    - curl

- name: Install desktop packages
  apt: pkg={{item}} state=present
  with_items:
    - vlc
    - gimp
    - blender
    - vim-gnome
    - gparted
    - nautilus-actions
    - gksu
    - ubuntu-restricted-extras
    - humanity-icon-theme

- name: Remove packages I don't use
  apt: pkg={{item}} state=absent purge=yes
  with_items:
    - evolution
    - rhythmbox
    - empathy
    - gnome-photos
    - gnome-contacts
    - gnome-calendar
    - gnome-mines
    - gnome-sudoku
    - aisleriot
    - totem
    - deja-dup
    - thunderbird

#- name: Install Steam
#  apt: pkg={{item}} state=present
#  with_items:
#    - steam

- name: Accept Steam license
  debconf: name=steam question='steam/question' value='I AGREE' vtype='select'

- name: Accept Steam license (part 2)
  debconf: name=steam question='steam/license' value='' vtype='note'

- name: Install latest Steam
  apt: deb=https://steamcdn-a.akamaihd.net/client/installer/steam.deb

- name: Install Nvidia video driver
  apt: pkg={{item}} state=present
  with_items:
    - nvidia-361
    - nvidia-361-dev

- name: Install the 'grin' tool
  pip: name=grin state=latest
  become: true

- name: Add proper Node.js v6.x to repo list
  shell: curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -

- name: Install proper Node.js v6.x
  apt: pkg=nodejs state=present

- name: Make nodejs binary 'node' rather than 'nodejs'
  # sudo update-alternatives --install /usr/bin/node node /usr/bin/nodejs 10
  alternatives: name=node
                link=/usr/bin/node
                path=/usr/bin/nodejs
                priority=10

- name: Accept Oracle Java license
  debconf: name='oracle-java8-installer' question='shared/accepted-oracle-license-v1-1' value='true' vtype='select'
#  shell: echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | sudo /usr/bin/debconf-set-selections

- name: Install Oracle Java 8
  apt: pkg={{item}} state=present
  with_items:
    - oracle-java8-installer
    - oracle-java8-set-default

- name: Install Ubuntu Make from PPA
  apt: pkg={{item}} state=present
  with_items:
    - ubuntu-make

# Not doing this since the non-standard Mono seems to break some things sometimes
# Mono
# sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
# - apt_key: keyserver=keyserver.ubuntu.com id=3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
# echo "deb http://download.mono-project.com/repo/debian wheezy main" | sudo tee /etc/apt/sources.list.d/mono-xamarin.list
# sudo apt-get update
# sudo apt-get install mono-complete

# - name: Install Google Chrome
#   command: wget -O /tmp/google-chrome-stable_current_amd64.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb; dpkg -i /tmp/google-chrome-stable_current_amd64.deb

- name: Install Googe Chrome (stable)
  apt: pkg={{item}} state=present
  with_items:
    - google-chrome-stable

- name: Install Spotify
  apt: pkg={{item}} allow_unauthenticated=true state=present
  with_items:
    - spotify-client

- name: Install Dropbox
  apt: pkg={{item}} state=present
  with_items:
    - python-gpgme
    - dropbox

- name: Install Google Talk Plugin
  apt: pkg={{item}} state=present
  with_items:
    - google-talkplugin

- stat: path=/home/{{main_user}}/programs
  register: programs_folder

- name: Create 'programs' dir for Ubuntu Make installations
  file: path=/home/{{main_user}}/programs
        state=directory
        mode="u+rwx,o-rwx"
  when: programs_folder.stat.exists == False

- include: docker.yml
- include: pycharm-professional-umake.yml
- include: visual-studio-code-deb.yml
- include: smartgit.yml
- include: terminal_theme.yml
# - include: crashplan.yml
# - include: firefox-developer-edition-umake.yml
