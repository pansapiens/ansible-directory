---
# tasks file for desktop

- include_tasks: find-ubuntu-flavor.yml
  tags: [always]

- name: Install aptitude first
  apt: pkg=aptitude state=present

- include_tasks: repositories.yml
  tags: repositories

# No longer required, using Galaxy role angstwad.docker_ubuntu instead
# - include_tasks: docker.yml

# sudo usermod -aG docker $USER
- name: Add primary user to the 'docker' group
  user: name={{main_user}} groups=docker append=yes

#####

- name: Update APT cache
  apt: update_cache=yes cache_valid_time=3600

- name: Safe apt-get upgrade
  apt: upgrade=safe

- name: Install base development/server packages
  apt: pkg={{item}} state=present update_cache=yes cache_valid_time=3600
  with_items:
    - mosh
    - openssh-server
    - samba
    - samba-common
    - smbclient
    - samba-vfs-modules
    - build-essential
    - git
    - ubuntu-make
    - vim
    - htop
    - byobu
    - ipython
    - at
    - aria2
    - microcode.ctl
    - intel-microcode
    - ppa-purge
    - curl
    - ncftp
    - nmap
    - gedit
    - xrdp
    - runc
    - speedtest-cli
    - golang-go

- include_tasks: python.yml
  tags: [dev, python]

- include_tasks: tor.yml
  tags: [privacy, tor]

- name: Install desktop packages
  apt: pkg={{item}} state=present cache_valid_time=3600
  with_items:
    - vlc
    - gimp
    - blender
    - vim-gnome
    - gparted
    - nautilus-actions
    - gksu
    - ubuntu-restricted-extras
    - humanity-icon-theme

- name: Remove packages I don't use
  apt: pkg={{item}} state=absent purge=yes
  with_items:
    - evolution
    - rhythmbox
    - empathy
    - gnome-photos
    - gnome-contacts
    - gnome-calendar
    - gnome-mines
    - gnome-sudoku
    - aisleriot
    - totem
    - deja-dup
    - thunderbird

- include_tasks: gnome3.yml
  tags: [gnome3]
  when: ubuntu_release != 'artful'

- include_tasks: singularity-apt.yml
  tags: [singularity]

#- name: Install Steam
#  apt: pkg={{item}} state=present
#  with_items:
#    - steam

# TODO: Need to deal with some interactive dpkg-configure options here
#       before we can automatically install this.
#- name: Install localepurge
#  apt: pkg={{item}} state=present
#  with_items:
#    - localepurge

- name: Install the 'grin' tool
  tags: [dev]
  pip: name=grin state=latest
  become: true

- include_tasks: java.yml
  tags: [dev, java]

- include_tasks: haskell.yml
  tags: [dev, haskell]

- name: Install Ubuntu Make from PPA
  tags: [dev]
  apt: pkg={{item}} state=present
  with_items:
    - ubuntu-make

- include_tasks: google-talk-plugin.yml
  tags: [browser]

- include_tasks: spotify.yml
  tags: [music, spotify]

- stat: path=/home/{{main_user}}/programs
  register: programs_folder

- name: Create 'programs' dir for Ubuntu Make installations
  file: path="/home/{{main_user}}/programs"
        state=directory
        mode="u+rwx,o-rwx"
        owner="{{main_user}}"
  when: programs_folder.stat.exists == False

- include_tasks: pypy.yml
  tags: [dev, pypy, python]

- include_tasks: nodejs.yml
  tags: [dev, nodejs]

- include_tasks: google-drive-ocamlfuse-ppa.yml
  tags: [cloud, google-drive-ocamlfuse]

- include_tasks: rstudio.yml
  tags: [rstudio, rlang]

- include_tasks: deluge.yml
  tags: [torrents, deluge]

- include_tasks: nvidia-video-driver.yml
  tags: [gaming, nvidia]

- include_tasks: steam.yml
  tags: [gaming, steam]

- include_tasks: itchio.yml
  tags: [gaming, itchio]

# GetDeb only hosts the PyCharm Community Edition, not Professional
#- include_tasks: pycharm-getdeb-repo.yml
#  tags: [dev, pycharm]

- include_tasks: pycharm-professional-umake.yml
  tags: [dev, pycharm]

- include_tasks: visual-studio-code-deb.yml
  tags: [dev, vscode]

- include_tasks: smartgit.yml
  tags: [dev, smartgit]

- include_tasks: gitkraken.yml
  tags: [dev, gitkraken]

- include_tasks: terminal_theme.yml
  tags: [cosmetic]
# - include_tasks: erlang-elixir.yml
# - include_tasks: crashplan.yml

- include_tasks: firefox-developer-edition-ppa.yml
  tags: [dev, firefox, browser]

- include_tasks: firefox-developer-edition-umake.yml
  tags: [dev, firefox, browser]

# - include_tasks: jetbrains-toolbox.yml
- include_tasks: dropbox.yml
  tags: [cloud, dropbox]

- include_tasks: openshot.yml
  tags: [video, openshot]
  when: (ansible_distribution == 'Ubuntu') and (ansible_distribution_version|float < 17.10)

- include_tasks: etcher.yml
  tags: [etcher]

- include_tasks: insync.yml
  tags: [cloud, insync]

# - include_tasks: mono-xamarin.yml
# - incliude: dotnet-core.yml

# Add line:
# PATH=$PATH:${HOME}/.local/bin
# to ~/.bashrc for the main_user
# if not present
